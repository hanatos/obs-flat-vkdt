#version 460
#extension GL_GOOGLE_include_directive    : enable
#extension GL_EXT_nonuniform_qualifier    : enable

#include "shared.glsl"

layout(local_size_x = DT_LOCAL_SIZE_X, local_size_y = DT_LOCAL_SIZE_Y, local_size_z = 1) in;

// layout(std140, set = 0, binding = 1) uniform params_t
// { } params;

// layout(push_constant, std140) uniform push_t
// { } push;

layout(
    set = 1, binding = 0
) uniform sampler2D img_in0[]; // blurred original

layout(
    set = 1, binding = 1
) uniform sampler2D img_in1[]; // from residual network

layout(
    set = 1, binding = 2
) uniform writeonly image2D img_out;

void
main()
{
  ivec2 ipos = ivec2(gl_GlobalInvocationID);
  if(any(greaterThanEqual(ipos, imageSize(img_out)))) return;
  vec3 rgb0 = texelFetch(img_in0[0], ipos, 0).rgb;
  vec3 rgb1 = texelFetch(img_in1[0], ipos, 0).rgb;
  // imageStore(img_out, ipos, vec4(rgb1/256.0, 1.0)); // XXX DEBUG
  imageStore(img_out, ipos, vec4((rgb0+rgb1)/256.0, 1.0));
}
