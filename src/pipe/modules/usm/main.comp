#version 460
#extension GL_GOOGLE_include_directive    : enable
#extension GL_EXT_nonuniform_qualifier    : enable
#include "shared.glsl"
layout(local_size_x = DT_LOCAL_SIZE_X, local_size_y = DT_LOCAL_SIZE_Y, local_size_z = 1) in;
layout(std140, set = 0, binding = 1) uniform params_t
{
  float amount;
  float thrs;
} params;
layout(set = 1, binding = 0) uniform sampler2D img_in;
layout(set = 1, binding = 1) uniform writeonly image2D img_out;

void main()
{
  ivec2 ipos = ivec2(gl_GlobalInvocationID);
  if(any(greaterThanEqual(ipos, imageSize(img_out)))) return;
  vec4 rgba   = sample_flower4(img_in, (ipos+0.5)/textureSize(img_in, 0));
  vec4 center = texelFetch(img_in, ipos, 0);
  center = rgba + mix(vec4(1.0), vec4(params.amount), lessThan(center - rgba, vec4(params.thrs))) * (center - rgba);
  center.a = 1.0;
  imageStore(img_out, ipos, center);
}
