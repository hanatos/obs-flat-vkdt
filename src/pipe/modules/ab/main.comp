#version 460
#extension GL_GOOGLE_include_directive    : enable
#extension GL_EXT_nonuniform_qualifier    : enable

#include "shared.glsl"

layout(local_size_x = DT_LOCAL_SIZE_X, local_size_y = DT_LOCAL_SIZE_Y, local_size_z = 1) in;

layout(std140, set = 0, binding = 1) uniform params_t
{
  float split;
} params;


layout(set = 1, binding = 0) uniform sampler2D img_a;
layout(set = 1, binding = 1) uniform sampler2D img_b;
layout(set = 1, binding = 2) uniform writeonly image2D img_out;

void
main()
{
  ivec2 ipos = ivec2(gl_GlobalInvocationID);
  if(any(greaterThanEqual(ipos, imageSize(img_out)))) return;

  vec4 rgb;
  if(ipos.x/float(imageSize(img_out).x) < params.split)
    rgb = texelFetch(img_a, ipos, 0);
  else
    rgb = texelFetch(img_b, ipos, 0);

  imageStore(img_out, ipos, rgb);
}

