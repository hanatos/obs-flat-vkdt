#version 460
#extension GL_GOOGLE_include_directive    : enable
#extension GL_EXT_nonuniform_qualifier    : enable

#include "shared.glsl"

layout(local_size_x = DT_LOCAL_SIZE_X, local_size_y = DT_LOCAL_SIZE_Y, local_size_z = 1) in;

// layout(std140, set = 0, binding = 1) uniform params_t
// { } params;

layout( // input
    set = 1, binding = 0
) uniform sampler2D img_in;

layout( // output
    set = 1, binding = 1
) uniform writeonly image2D img_out;

void
main()
{
  ivec2 ipos = ivec2(gl_GlobalInvocationID);
  if(any(greaterThanEqual(ipos, imageSize(img_out)))) return;

  vec4 rgb;
  if(imageSize(img_out).x == textureSize(img_in, 0).x) // 1:1
    rgb = texelFetch(img_in, ipos, 0);
  else if(imageSize(img_out).x > textureSize(img_in, 0).x) // magnify
    rgb = sample_flower(img_in, (ipos+0.5)/vec2(imageSize(img_out)));
  else // minify
    rgb = sample_catmull_rom(img_in, (ipos+0.5)/vec2(imageSize(img_out)));
  imageStore(img_out, ipos, rgb);
}

