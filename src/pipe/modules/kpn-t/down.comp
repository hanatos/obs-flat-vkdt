#version 460
#extension GL_GOOGLE_include_directive    : enable
#extension GL_KHR_shader_subgroup_basic                    : enable
#extension GL_KHR_shader_subgroup_arithmetic               : enable
#extension GL_KHR_shader_subgroup_clustered                : enable
layout(std140, set = 0, binding = 0) uniform global_t
{
  uint frame;
} global;
layout(push_constant, std140) uniform push_t
{
  uint num_elements;
  uint num_frames;
} push;
layout(local_size_x = 32, local_size_y = 1, local_size_z = 1) in;
layout(set = 1, binding = 0) buffer ssboi_t { float v[]; } Ein;
layout(set = 1, binding = 1) buffer ssboo_t { float v[]; } Eout;

void main()
{
  float E = 0;
  if(gl_GlobalInvocationID.x < push.num_elements)
    E = Ein.v[gl_GlobalInvocationID.x];
  subgroupBarrier();
  E = subgroupAdd(E);
  if(gl_SubgroupInvocationID == 0)
  {
    if(push.num_elements <= gl_SubgroupSize) // last iteration, write time progression
      Eout.v[global.frame % push.num_frames] = E;
    else Eout.v[gl_WorkGroupID.x] = E;
  }
}

